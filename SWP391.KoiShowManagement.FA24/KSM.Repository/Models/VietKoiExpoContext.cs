// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Configuration;

namespace KSM.Repository.Models;

public partial class VietKoiExpoContext : DbContext
{
    public VietKoiExpoContext()
    {
    }
    public VietKoiExpoContext(DbContextOptions<VietKoiExpoContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Tblcategory> Tblcategories { get; set; }

    public virtual DbSet<TblcheckIn> TblcheckIns { get; set; }

    public virtual DbSet<Tblcompetition> Tblcompetitions { get; set; }

    public virtual DbSet<TblcompetitionCategory> TblcompetitionCategories { get; set; }

    public virtual DbSet<TblkoiFish> TblkoiFishes { get; set; }

    public virtual DbSet<Tblnews> Tblnews { get; set; }

    public virtual DbSet<TblnewsType> TblnewsTypes { get; set; }

    public virtual DbSet<Tblprediction> Tblpredictions { get; set; }

    public virtual DbSet<Tblregistration> Tblregistrations { get; set; }

    public virtual DbSet<TblregistrationPayment> TblregistrationPayments { get; set; }

    public virtual DbSet<Tblresult> Tblresults { get; set; }

    public virtual DbSet<Tblrole> Tblroles { get; set; }

    public virtual DbSet<Tblscore> Tblscores { get; set; }

    public virtual DbSet<Tbltask> Tbltasks { get; set; }

    public virtual DbSet<Tbluser> Tblusers { get; set; }

    public virtual DbSet<Tblvariety> Tblvarieties { get; set; }
    public static string GetConnectionString(string connectionStringName)
    {
        var config = new ConfigurationBuilder()
            .SetBasePath(AppDomain.CurrentDomain.BaseDirectory)
            .AddJsonFile("appsettings.json")
            .Build();

        string connectionString = config.GetConnectionString(connectionStringName);
        return connectionString;
    }
    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        => optionsBuilder.UseSqlServer(GetConnectionString("DefaultConnection"));

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Tblcategory>(entity =>
        {
            entity.HasKey(e => e.CategoryId).HasName("PK__TBLCateg__19093A2BC8A175EF");

            entity.ToTable("TBLCategory");

            entity.Property(e => e.CategoryId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CategoryID");
            entity.Property(e => e.CategoryDescription).HasMaxLength(100);
            entity.Property(e => e.CategoryName).HasMaxLength(20);
        });

        modelBuilder.Entity<TblcheckIn>(entity =>
        {
            entity.HasKey(e => e.CheckInId).HasName("PK__TBLCheck__E64976A4AA92EB64");

            entity.ToTable("TBLCheckIn");

            entity.Property(e => e.CheckInId)
                .ValueGeneratedNever()
                .HasColumnName("CheckInID");
            entity.Property(e => e.Description).HasMaxLength(100);
            entity.Property(e => e.ImageUrl)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.RegistrationId).HasColumnName("RegistrationID");

            entity.HasOne(d => d.Registration).WithMany(p => p.TblcheckIns)
                .HasForeignKey(d => d.RegistrationId)
                .HasConstraintName("FK__TBLCheckI__Regis__5441852A");
        });

        modelBuilder.Entity<Tblcompetition>(entity =>
        {
            entity.HasKey(e => e.CompId).HasName("PK__TBLCompe__AD362A767B2802DB");

            entity.ToTable("TBLCompetition");

            entity.Property(e => e.CompId)
                .ValueGeneratedNever()
                .HasColumnName("CompID");
            entity.Property(e => e.CompDescription).HasMaxLength(100);
            entity.Property(e => e.CompName).HasMaxLength(50);
            entity.Property(e => e.ImageUrl).HasMaxLength(255);
            entity.Property(e => e.Location).HasMaxLength(50);
        });

        modelBuilder.Entity<TblcompetitionCategory>(entity =>
        {
            entity.HasKey(e => e.CompetitionCategoryId).HasName("PK__TBLCompe__007C976B7C002C58");

            entity.ToTable("TBLCompetitionCategory");

            entity.Property(e => e.CompetitionCategoryId)
                .ValueGeneratedNever()
                .HasColumnName("CompetitionCategoryID");
            entity.Property(e => e.CategoryId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CategoryID");
            entity.Property(e => e.CompId).HasColumnName("CompID");
            entity.Property(e => e.KoiId).HasColumnName("KoiID");

            entity.HasOne(d => d.Category).WithMany(p => p.TblcompetitionCategories)
                .HasForeignKey(d => d.CategoryId)
                .HasConstraintName("FK__TBLCompet__Categ__5535A963");

            entity.HasOne(d => d.Comp).WithMany(p => p.TblcompetitionCategories)
                .HasForeignKey(d => d.CompId)
                .HasConstraintName("FK__TBLCompet__CompI__5629CD9C");

            entity.HasOne(d => d.Koi).WithMany(p => p.TblcompetitionCategories)
                .HasForeignKey(d => d.KoiId)
                .HasConstraintName("FK__TBLCompet__KoiID__571DF1D5");
        });

        modelBuilder.Entity<TblkoiFish>(entity =>
        {
            entity.HasKey(e => e.KoiId).HasName("PK__TBLKoiFi__E03435B8BD08F14F");

            entity.ToTable("TBLKoiFish");

            entity.Property(e => e.KoiId)
                .ValueGeneratedNever()
                .HasColumnName("KoiID");
            entity.Property(e => e.CertificateImageUrl)
                .HasMaxLength(255)
                .HasColumnName("CertificateImageURL");
            entity.Property(e => e.ImageUrl).HasMaxLength(255);
            entity.Property(e => e.KoiName).HasMaxLength(50);
            entity.Property(e => e.UserId).HasColumnName("UserID");
            entity.Property(e => e.VarietyId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("VarietyID");

            entity.HasOne(d => d.User).WithMany(p => p.TblkoiFishes)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__TBLKoiFis__UserI__5812160E");

            entity.HasOne(d => d.Variety).WithMany(p => p.TblkoiFishes)
                .HasForeignKey(d => d.VarietyId)
                .HasConstraintName("FK__TBLKoiFis__Varie__59063A47");
        });

        modelBuilder.Entity<Tblnews>(entity =>
        {
            entity.HasKey(e => e.NewsId).HasName("PK__TBLNews__954EBDD3F1EF68EC");

            entity.ToTable("TBLNews");

            entity.Property(e => e.NewsId)
                .ValueGeneratedNever()
                .HasColumnName("NewsID");
            entity.Property(e => e.ImageUrl).HasMaxLength(255);
            entity.Property(e => e.NewsDescription).HasMaxLength(255);
            entity.Property(e => e.NewsTypeId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("NewsTypeID");
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.NewsType).WithMany(p => p.Tblnews)
                .HasForeignKey(d => d.NewsTypeId)
                .HasConstraintName("FK__TBLNews__NewsTyp__59FA5E80");

            entity.HasOne(d => d.User).WithMany(p => p.Tblnews)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__TBLNews__UserID__5AEE82B9");
        });

        modelBuilder.Entity<TblnewsType>(entity =>
        {
            entity.HasKey(e => e.NewsTypeId).HasName("PK__TBLNewsT__9013FE2A1F0FED97");

            entity.ToTable("TBLNewsType");

            entity.Property(e => e.NewsTypeId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("NewsTypeID");
            entity.Property(e => e.NewsTypeName).HasMaxLength(50);
        });

        modelBuilder.Entity<Tblprediction>(entity =>
        {
            entity.HasKey(e => e.PredictionId).HasName("PK__TBLPredi__BAE4C140C5AF9230");

            entity.ToTable("TBLPrediction");

            entity.Property(e => e.PredictionId)
                .ValueGeneratedNever()
                .HasColumnName("PredictionID");
            entity.Property(e => e.CompId).HasColumnName("CompID");
            entity.Property(e => e.KoiId).HasColumnName("KoiID");

            entity.HasOne(d => d.Comp).WithMany(p => p.Tblpredictions)
                .HasForeignKey(d => d.CompId)
                .HasConstraintName("FK__TBLPredic__CompI__5BE2A6F2");

            entity.HasOne(d => d.Koi).WithMany(p => p.Tblpredictions)
                .HasForeignKey(d => d.KoiId)
                .HasConstraintName("FK__TBLPredic__KoiID__5CD6CB2B");
        });

        modelBuilder.Entity<Tblregistration>(entity =>
        {
            entity.HasKey(e => e.RegistrationId).HasName("PK__TBLRegis__6EF58830DE335FB9");

            entity.ToTable("TBLRegistration");

            entity.Property(e => e.RegistrationId)
                .ValueGeneratedNever()
                .HasColumnName("RegistrationID");
            entity.Property(e => e.CompId).HasColumnName("CompID");
            entity.Property(e => e.KoiId).HasColumnName("KoiID");

            entity.HasOne(d => d.Comp).WithMany(p => p.Tblregistrations)
                .HasForeignKey(d => d.CompId)
                .HasConstraintName("FK__TBLRegist__CompI__5DCAEF64");

            entity.HasOne(d => d.Koi).WithMany(p => p.Tblregistrations)
                .HasForeignKey(d => d.KoiId)
                .HasConstraintName("FK__TBLRegist__KoiID__5EBF139D");
        });

        modelBuilder.Entity<TblregistrationPayment>(entity =>
        {
            entity.HasKey(e => e.RegistrationPayId).HasName("PK__TBLRegis__513791E2E7358E0D");

            entity.ToTable("TBLRegistrationPayment");

            entity.Property(e => e.RegistrationPayId)
                .ValueGeneratedNever()
                .HasColumnName("RegistrationPayID");
            entity.Property(e => e.Description).HasMaxLength(50);
            entity.Property(e => e.Name)
                .HasMaxLength(20)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Tblresult>(entity =>
        {
            entity.HasKey(e => e.ResultId).HasName("PK__TBLResul__97690228F5A2BE5F");

            entity.ToTable("TBLResult");

            entity.Property(e => e.ResultId)
                .ValueGeneratedNever()
                .HasColumnName("ResultID");
            entity.Property(e => e.CompId).HasColumnName("CompID");
            entity.Property(e => e.KoiId).HasColumnName("KoiID");
            entity.Property(e => e.Prize).HasMaxLength(255);

            entity.HasOne(d => d.Comp).WithMany(p => p.Tblresults)
                .HasForeignKey(d => d.CompId)
                .HasConstraintName("FK__TBLResult__CompI__5FB337D6");

            entity.HasOne(d => d.Koi).WithMany(p => p.Tblresults)
                .HasForeignKey(d => d.KoiId)
                .HasConstraintName("FK__TBLResult__KoiID__60A75C0F");
        });

        modelBuilder.Entity<Tblrole>(entity =>
        {
            entity.HasKey(e => e.RoleId).HasName("PK__TBLRole__8AFACE3A7B8B98AA");

            entity.ToTable("TBLRole");

            entity.Property(e => e.RoleId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("RoleID");
            entity.Property(e => e.RoleDescription).HasMaxLength(255);
            entity.Property(e => e.RoleName).HasMaxLength(10);
        });

        modelBuilder.Entity<Tblscore>(entity =>
        {
            entity.HasKey(e => e.ScoreId).HasName("PK__TBLScore__7DD229F174EF3BEB");

            entity.ToTable("TBLScore");

            entity.Property(e => e.ScoreId)
                .ValueGeneratedNever()
                .HasColumnName("ScoreID");
            entity.Property(e => e.CompId).HasColumnName("CompID");
            entity.Property(e => e.KoiId).HasColumnName("KoiID");
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.Comp).WithMany(p => p.Tblscores)
                .HasForeignKey(d => d.CompId)
                .HasConstraintName("FK__TBLScore__CompID__619B8048");

            entity.HasOne(d => d.Koi).WithMany(p => p.Tblscores)
                .HasForeignKey(d => d.KoiId)
                .HasConstraintName("FK__TBLScore__KoiID__628FA481");

            entity.HasOne(d => d.User).WithMany(p => p.Tblscores)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__TBLScore__UserID__6383C8BA");
        });

        modelBuilder.Entity<Tbltask>(entity =>
        {
            entity.HasKey(e => e.TaskId).HasName("PK__TBLTask__7C6949D1637E81F3");

            entity.ToTable("TBLTask");

            entity.Property(e => e.TaskId)
                .ValueGeneratedNever()
                .HasColumnName("TaskID");
            entity.Property(e => e.CompId).HasColumnName("CompID");
            entity.Property(e => e.TaskDescription).HasMaxLength(100);
            entity.Property(e => e.TaskName).HasMaxLength(50);
            entity.Property(e => e.UserId).HasColumnName("UserID");

            entity.HasOne(d => d.Comp).WithMany(p => p.Tbltasks)
                .HasForeignKey(d => d.CompId)
                .HasConstraintName("FK__TBLTask__CompID__6477ECF3");

            entity.HasOne(d => d.User).WithMany(p => p.Tbltasks)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__TBLTask__UserID__656C112C");
        });

        modelBuilder.Entity<Tbluser>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__TBLUser__1788CCACFD35ADAD");

            entity.ToTable("TBLUser");

            entity.Property(e => e.UserId)
                .ValueGeneratedNever()
                .HasColumnName("UserID");
            entity.Property(e => e.Address).HasMaxLength(100);
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.FullName).HasMaxLength(50);
            entity.Property(e => e.ImageUrl).HasMaxLength(255);
            entity.Property(e => e.Password).HasMaxLength(100);
            entity.Property(e => e.Phone).HasMaxLength(20);
            entity.Property(e => e.RoleId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("RoleID");

            entity.HasOne(d => d.Role).WithMany(p => p.Tblusers)
                .HasForeignKey(d => d.RoleId)
                .HasConstraintName("FK__TBLUser__RoleID__66603565");
        });

        modelBuilder.Entity<Tblvariety>(entity =>
        {
            entity.HasKey(e => e.VarietyId).HasName("PK__TBLVarie__08E3A04831E52840");

            entity.ToTable("TBLVariety");

            entity.Property(e => e.VarietyId)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("VarietyID");
            entity.Property(e => e.VarietyDescription).HasMaxLength(100);
            entity.Property(e => e.VarietyName).HasMaxLength(50);
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}